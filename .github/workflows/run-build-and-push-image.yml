name: Build image and push to ECR

on:
  workflow_dispatch:  # Allows manual
  # push:
  #   branches:
  #     - main

jobs:
  push-to-ecr:
    runs-on: ubuntu-22.04
    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Create ECR repository if it doesn't exist
      - name: Create ECR repository
        run: |
          aws_account_id=$(aws sts get-caller-identity --query "Account" --output text)
          aws ecr describe-repositories --repository-names "lamlt-sonvt" || aws ecr create-repository --repository-name "lamlt-sonvt"

      # Step 5: Build and push Docker images for each service
      - name: Build and push images
        run: |
          services=("Cart" "User" "Product" "front-end")
          for service in "${services[@]}"; do
            aws_account_id=$(aws sts get-caller-identity --query "Account" --output text)
            commit_id=$(echo "${GITHUB_SHA}" | cut -c1-7)
            image_name="${aws_account_id}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lamlt-sonvt:${service,,}-${commit_id}"
            cd "E-Commerce_Web_Application/$service" || exit 1
            docker build -t "$image_name" .
            docker push "$image_name"
            cd - || exit 1
          done
